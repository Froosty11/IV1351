 --#Assignment 1 
 
 GroupAggregate  (cost=49.67..49.93 rows=8 width=56) (actual time=0.491..0.501 rows=12 loops=1)
   Group Key: (to_char(c.date_and_time, 'MONTH'::text))
   ->  Sort  (cost=49.67..49.69 rows=8 width=90) (actual time=0.269..0.271 rows=17 loops=1)
         Sort Key: (to_char(c.date_and_time, 'MONTH'::text))
         Sort Method: quicksort  Memory: 26kB
         ->  Nested Loop  (cost=0.28..49.55 rows=8 width=90) (actual time=0.205..0.241 rows=17 loops=1)
               ->  Append  (cost=0.00..45.04 rows=8 width=70) (actual time=0.020..0.038 rows=17 loops=1)
                     ->  Seq Scan on lesson c_1  (cost=0.00..0.00 rows=1 width=70) (actual time=0.008..0.008 rows=0 loops=1)
                           Filter: ((date_and_time >= '2022-01-01 00:00:00'::timestamp without time zone) AND (date_and_time <= '2022-12-31 00:00:00'::timestamp without time zone))
                     ->  Seq Scan on multilesson c_2  (cost=0.00..0.00 rows=1 width=70) (actual time=0.003..0.003 rows=0 loops=1)
                           Filter: ((date_and_time >= '2022-01-01 00:00:00'::timestamp without time zone) AND (date_and_time <= '2022-12-31 00:00:00'::timestamp without time zone))
                     ->  Seq Scan on single_p_lesson c_3  (cost=0.00..14.95 rows=2 width=70) (actual time=0.008..0.009 rows=4 loops=1)
                           Filter: ((date_and_time >= '2022-01-01 00:00:00'::timestamp without time zone) AND (date_and_time <= '2022-12-31 00:00:00'::timestamp without time zone))
                           Rows Removed by Filter: 1
                     ->  Seq Scan on ensemble c_4  (cost=0.00..15.25 rows=2 width=70) (actual time=0.007..0.008 rows=8 loops=1)
                           Filter: ((date_and_time >= '2022-01-01 00:00:00'::timestamp without time zone) AND (date_and_time <= '2022-12-31 00:00:00'::timestamp without time zone))
                           Rows Removed by Filter: 2
                     ->  Seq Scan on group_lesson c_5  (cost=0.00..14.80 rows=2 width=70) (actual time=0.006..0.007 rows=5 loops=1)
                           Filter: ((date_and_time >= '2022-01-01 00:00:00'::timestamp without time zone) AND (date_and_time <= '2022-12-31 00:00:00'::timestamp without time zone))
               ->  Memoize  (cost=0.28..2.30 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=17)
                     Cache Key: c.tableoid
                     Cache Mode: logical
                     Hits: 14  Misses: 3  Evictions: 0  Overflows: 0  Memory Usage: 1kB
                     ->  Index Only Scan using pg_class_oid_index on pg_class p  (cost=0.27..2.29 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=3)
                           Index Cond: (oid = c.tableoid)
                           Heap Fetches: 3
 Planning Time: 4.396 ms
 Execution Time: 0.607 ms

--Assignment 2

 GroupAggregate  (cost=7203.57..7207.97 rows=200 width=16) (actual time=0.318..0.323 rows=3 loops=1)
   Group Key: subquery.siblings
   ->  Sort  (cost=7203.57..7204.37 rows=320 width=8) (actual time=0.315..0.318 rows=6 loops=1)
         Sort Key: subquery.siblings DESC
         Sort Method: quicksort  Memory: 25kB
         ->  Subquery Scan on subquery  (cost=7186.26..7190.26 rows=320 width=8) (actual time=0.282..0.285 rows=6 loops=1)
               ->  Sort  (cost=7186.26..7187.06 rows=320 width=12) (actual time=0.281..0.283 rows=6 loops=1)
                     Sort Key: student.id
                     Sort Method: quicksort  Memory: 25kB
                     ->  Merge Full Join  (cost=17.70..7172.94 rows=320 width=12) (actual time=0.223..0.270 rows=6 loops=1)
                           Merge Cond: (student.id = student_1.id)
                           ->  Index Only Scan using pk_student on student  (cost=0.15..52.95 rows=320 width=4) (actual time=0.167..0.171 rows=6 loops=1)
                                 Heap Fetches: 6
                           ->  GroupAggregate  (cost=17.55..7111.99 rows=320 width=12) (actual time=0.052..0.093 rows=5 loops=1)
                                 Group Key: student_1.id
                                 ->  Nested Loop  (cost=17.55..7086.23 rows=4513 width=4) (actual time=0.033..0.082 rows=6 loops=1)
                                       ->  Index Only Scan using pk_student on student student_1  (cost=0.15..52.95 rows=320 width=4) (actual time=0.011..0.015 rows=6 loops=1)
                                             Heap Fetches: 6
                                       ->  Bitmap Heap Scan on sibling_info  (cost=17.40..21.75 rows=23 width=8) (actual time=0.005..0.006 rows=1 loops=6)
                                             Recheck Cond: ((student_1.id = sibling1) OR (student_1.id = sibling2))
                                             Heap Blocks: exact=5
                                             ->  BitmapOr  (cost=17.40..17.40 rows=23 width=0) (actual time=0.003..0.004 rows=0 loops=6)
                                                   ->  Bitmap Index Scan on pk_sibling_info  (cost=0.00..17.13 rows=11 width=0) (actual time=0.002..0.002 rows=1 loops=6)
                                                         Index Cond: (sibling1 = student_1.id)
                                                   ->  Bitmap Index Scan on pk_sibling_info  (cost=0.00..0.26 rows=11 width=0) (actual time=0.001..0.001 rows=1 loops=6)
                                                         Index Cond: (sibling2 = student_1.id)
 Planning Time: 0.327 ms
 Execution Time: 0.877 ms

 -- Assignment 3
  Sort  (cost=105.50..106.00 rows=200 width=126) (actual time=0.156..0.157 rows=5 loops=1)
   Sort Key: (sum(CASE WHEN (l.instructorid = i.id) THEN 1 ELSE 0 END)) DESC
   Sort Method: quicksort  Memory: 25kB
   ->  HashAggregate  (cost=95.86..97.86 rows=200 width=126) (actual time=0.135..0.137 rows=5 loops=1)
         Group Key: i.full_name
         Batches: 1  Memory Usage: 40kB
         ->  Nested Loop  (cost=0.00..81.46 rows=1920 width=126) (actual time=0.100..0.121 rows=25 loops=1)
               ->  Seq Scan on instructor i  (cost=0.00..12.40 rows=240 width=122) (actual time=0.073..0.074 rows=5 loops=1)
               ->  Materialize  (cost=0.00..45.08 rows=8 width=4) (actual time=0.005..0.009 rows=5 loops=5)
                     ->  Append  (cost=0.00..45.04 rows=8 width=4) (actual time=0.019..0.034 rows=5 loops=1)
                           ->  Seq Scan on lesson l_1  (cost=0.00..0.00 rows=1 width=4) (actual time=0.006..0.006 rows=0 loops=1)
                                 Filter: ((date_and_time >= '2022-12-01 00:00:00'::timestamp without time zone) AND (date_and_time <= '2022-12-31 00:00:00'::timestamp without time zone))
                           ->  Seq Scan on multilesson l_2  (cost=0.00..0.00 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=1)
                                 Filter: ((date_and_time >= '2022-12-01 00:00:00'::timestamp without time zone) AND (date_and_time <= '2022-12-31 00:00:00'::timestamp without time zone))
                           ->  Seq Scan on single_p_lesson l_3  (cost=0.00..14.95 rows=2 width=4) (actual time=0.009..0.009 rows=2 loops=1)
                                 Filter: ((date_and_time >= '2022-12-01 00:00:00'::timestamp without time zone) AND (date_and_time <= '2022-12-31 00:00:00'::timestamp without time zone))
                                 Rows Removed by Filter: 3
                           ->  Seq Scan on ensemble l_4  (cost=0.00..15.25 rows=2 width=4) (actual time=0.007..0.008 rows=3 loops=1)
                                 Filter: ((date_and_time >= '2022-12-01 00:00:00'::timestamp without time zone) AND (date_and_time <= '2022-12-31 00:00:00'::timestamp without time zone))
                                 Rows Removed by Filter: 7
                           ->  Seq Scan on group_lesson l_5  (cost=0.00..14.80 rows=2 width=4) (actual time=0.006..0.007 rows=0 loops=1)
                                 Filter: ((date_and_time >= '2022-12-01 00:00:00'::timestamp without time zone) AND (date_and_time <= '2022-12-31 00:00:00'::timestamp without time zone))
                                 Rows Removed by Filter: 5
 Planning Time: 0.316 ms
 Execution Time: 0.220 ms

 -- Assignment 4

 Sort  (cost=17.89..17.89 rows=2 width=42) (actual time=0.055..0.056 rows=4 loops=1)
   Sort Key: genre DESC, spots_left DESC
   Sort Method: quicksort  Memory: 25kB
   ->  Seq Scan on ensemble e  (cost=0.00..17.88 rows=2 width=42) (actual time=0.025..0.028 rows=4 loops=1)
         Filter: ((date_and_time >= CURRENT_TIMESTAMP) AND (date_and_time <= (CURRENT_TIMESTAMP + '7 days'::interval)))
         Rows Removed by Filter: 7
 Planning Time: 0.135 ms
 Execution Time: 0.077 ms
(5 rader)